{"version":3,"sources":["serviceWorker.js","api/index.js","Header.js","Home.js","SelectorPerPage.js","MyLink.js","Tabs.js","PostList.js","App.js","index.js"],"names":["Boolean","window","location","hostname","match","getDate","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","url","wrap","_context","prev","next","abrupt","fetch","concat","then","response","json","stop","_x","apply","this","arguments","Header","react_default","createElement","className","react_router_dom","to","Home","withRouter","perPage","history","value","onChange","e","preventDefault","target","console","log","push","MyLink","linkElement","currentPage","toPage","linkText","Tabs","page","totalPages","src_MyLink","pages","i","map","item","pagination","PostList","props","posts","_props$match$params","params","currentPosts","slice","Math","ceil","length","src_Tabs","post","dangerouslySetInnerHTML","__html","elementPureHtml","src_SelectorPerPage","BASH1","BASH2","ZADOLBALI1","App","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","setBashDate","_ref2","newDate","state","bashDate","t0","t1","toConsumableArray","t2","sent","t3","t4","t5","t6","setState","setZadolbaliDate","_callee2","_context2","zadolbaliDate","_this2","src_Header","react_router","exact","path","component","src_PostList","objectSpread","React","Component","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.958b47b0.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","\r\n\r\nexport const getDate = async(url) =>\r\n  fetch(`${url}`).then(response => response.json());\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Header = () => (\r\n  <header className=\"App-header\">\r\n    <Link className=\"HeadButton\" to=\"/\">\r\n      Домой\r\n    </Link>\r\n    <Link className=\"HeadButton\" to={`/Bash/perPage=5&page=1`}>\r\n      Читать шутки юмора\r\n    </Link>\r\n    <Link className=\"HeadButton\" to={`/Zadolbali/perPage=2&page=1`}>\r\n      Все задолбали :(\r\n    </Link>\r\n  </header>\r\n);\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\n\r\nconst Home = () => (\r\n  <div>\r\n    <h1>This is Homepage</h1>\r\n  </div>\r\n);\r\n\r\nexport default Home;\r\n","import React from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nconst SelectorPerPage = ({ perPage, history }) => {\r\n  const handleChange = e => {\r\n    e.preventDefault();\r\n    const value = e.target.value;\r\n    console.log(value);\r\n    console.log(history);\r\n    history.push(`./perPage=${value}&page=1`);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <select value={perPage} onChange={handleChange}>\r\n        <option value=\"2\">2</option>\r\n        <option value=\"5\">5</option>\r\n        <option value=\"10\">10</option>\r\n        <option value=\"15\">15</option>\r\n      </select>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default withRouter(SelectorPerPage);\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst MyLink = ({ linkElement, currentPage, perPage, toPage, linkText }) => {\r\n  //console.log(`Start ${linkElement}`);\r\n  if (+linkElement && +linkElement !== +currentPage) {\r\n    //console.log(`IF ${linkElement}`);\r\n    return (\r\n      <Link className=\"button\" to={`./perPage=${perPage}&page=${toPage}`}>\r\n        {linkText}\r\n      </Link>\r\n    );\r\n  } else if (+linkElement !== +currentPage || +linkElement !== +toPage) {\r\n    return <span className=\"fictiveLink button\">{linkText}</span>;\r\n  } else {\r\n    return <span className=\"activeLink button\">{linkText}</span>;\r\n  }\r\n};\r\n\r\nexport default MyLink;\r\n","import React from \"react\";\r\nimport MyLink from \"./MyLink\";\r\n\r\nconst Tabs = ({ page, perPage, totalPages }) => {\r\n  const pagination = (page, perPage, totalPages) => {\r\n    if (totalPages < 7) {\r\n      const pages = [];\r\n      for (let i = 1; i < totalPages + 1; i++) {\r\n        pages.push(i);\r\n      }\r\n      return pages.map(item => (\r\n        <MyLink\r\n          linkElement={item}\r\n          currentPage={page}\r\n          perPage={perPage}\r\n          toPage={item}\r\n          linkText={item}\r\n        />\r\n      ));\r\n    } else if (page < 4) {\r\n      const pages = [];\r\n      for (let i = 1; i < 5; i++) {\r\n        pages.push(i);\r\n      }\r\n      pages.push(\"..\", \"..\", totalPages);\r\n\r\n      return pages.map(item => (\r\n        <MyLink\r\n          linkElement={item}\r\n          currentPage={page}\r\n          perPage={perPage}\r\n          toPage={item}\r\n          linkText={item}\r\n        />\r\n      ));\r\n    } else if (page > totalPages - 3) {\r\n      const pages = [1, \"..\", \"..\"];\r\n      for (let i = totalPages - 3; i < totalPages + 1; i++) {\r\n        pages.push(i);\r\n      }\r\n\r\n      return pages.map(item => (\r\n        <MyLink\r\n          linkElement={item}\r\n          currentPage={page}\r\n          perPage={perPage}\r\n          toPage={item}\r\n          linkText={item}\r\n        />\r\n      ));\r\n    } else {\r\n      const pages = [1, \"..\", page - 1, page, 1 + +page, \"..\", totalPages];\r\n      return pages.map(item => (\r\n        <MyLink\r\n          linkElement={item}\r\n          currentPage={page}\r\n          perPage={perPage}\r\n          toPage={item}\r\n          linkText={item}\r\n        />\r\n      ));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <nav>\r\n        <MyLink\r\n          linkElement={1}\r\n          currentPage={page}\r\n          perPage={perPage}\r\n          toPage={page - 1}\r\n          linkText={\"Prev\"}\r\n        />\r\n        {pagination(page, perPage, totalPages)}\r\n        <MyLink\r\n          linkElement={totalPages}\r\n          currentPage={page}\r\n          perPage={perPage}\r\n          toPage={+page + 1}\r\n          linkText={\"Next\"}\r\n        />\r\n      </nav>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Tabs;\r\n","import React from \"react\";\r\nimport \"./App.css\";\r\nimport SelectorPerPage from \"./SelectorPerPage\";\r\nimport Tabs from \"./Tabs\";\r\n\r\nconst PostList = ({ props, posts }) => {\r\n  const { page, perPage } = props.match.params;\r\n  const currentPosts = posts.slice(perPage * (page - 1), perPage * page);\r\n  const totalPages = Math.ceil(posts.length / perPage);\r\n\r\n  return !posts.length ? (\r\n    <div className=\"loader\"></div>\r\n  ) : (\r\n    <div className=\"App\">\r\n      <Tabs page={page} perPage={perPage} totalPages={totalPages} />\r\n      {currentPosts.map(post => {\r\n        return (\r\n          <div\r\n            className=\"post\"\r\n            dangerouslySetInnerHTML={{ __html: post.elementPureHtml }}\r\n          />\r\n        );\r\n      })}\r\n      <Tabs page={page} perPage={perPage} totalPages={totalPages} />\r\n      <SelectorPerPage perPage={perPage} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PostList;\r\n","import React from \"react\";\nimport \"./App.css\";\nimport { Route, Switch } from \"react-router-dom\";\nimport { getDate } from \"./api\";\nimport Header from \"./Header\";\nimport Home from \"./Home\";\nimport PostList from \"./PostList\";\n\nconst BASH1 = \"https://umorili.herokuapp.com/api/get?site=bash.im&name=bash\";\nconst BASH2 = \"https://umorili.herokuapp.com/api/get?site=bash.im&name=abyss\";\nconst ZADOLBALI1\n  = \"https://umorili.herokuapp.com/api/get?site=zadolba.li&name=zadolbali\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      bashDate: [],\n      zadolbaliDate: [],\n    };\n  }\n\n  setBashDate = async() => {\n    if (!this.state.bashDate.length) {\n      const [, ...newDate] = [\n        ...(await getDate(BASH1)),\n        ...(await getDate(BASH2)),\n      ];\n      console.log(\"Init Bash\");\n      this.setState({\n        bashDate: newDate,\n      });\n    }\n  };\n\n  setZadolbaliDate = async() => {\n    if (!this.state.zadolbaliDate.length) {\n      const newDate = [...(await getDate(ZADOLBALI1))];\n      console.log(`Init Zadolbali ${newDate.length}`);\n      this.setState({\n        zadolbaliDate: newDate,\n      });\n    }\n  };\n\n  render() {\n    const wrappedBash = props => {\n      this.setBashDate();\n      return <PostList props={{ ...props }} posts={this.state.bashDate} />;\n    };\n\n    const wrappedZadolbali = props => {\n      this.setZadolbaliDate();\n      return <PostList props={{ ...props }} posts={this.state.zadolbaliDate} />;\n    };\n\n    return (\n      <div className=\"App\">\n        <Header perPage={this.state.perPage} />\n        <Switch>\n          <Route exact path=\"/\" component={Home} />\n          <Route\n            path=\"/Bash/perPage=:perPage&page=:page\"\n            component={wrappedBash}\n          />\n          <Route\n            path=\"/Zadolbali/perPage=:perPage&page=:page\"\n            component={wrappedZadolbali}\n          />\n        </Switch>\n      </div>\n    );\n  }\n}\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { HashRouter } from \"react-router-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <HashRouter>\n    <App />\n  </HashRouter>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}